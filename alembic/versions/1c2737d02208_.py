"""empty message

Revision ID: 1c2737d02208
Revises: 66fc0254a81a
Create Date: 2022-12-31 15:26:45.709333

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1c2737d02208'
down_revision = '66fc0254a81a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_uz', sa.String(), nullable=True),
    sa.Column('image_en', sa.String(), nullable=True),
    sa.Column('image_ru', sa.String(), nullable=True),
    sa.Column('info_uz', sa.Text(), nullable=True),
    sa.Column('info_en', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', name='coursestatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('competitions')
    op.drop_table('showrooms')
    op.drop_table('user_post')
    op.drop_table('posts')
    op.add_column('contacts', sa.Column('image_en', sa.String(), nullable=True))
    op.add_column('contacts', sa.Column('contact_en', sa.Text(), nullable=True))
    op.drop_column('users', 'electric_status')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('electric_status', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('contacts', 'contact_en')
    op.drop_column('contacts', 'image_en')
    op.create_table('posts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('like', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('telegram_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('user_post_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='posts_pkey')
    )
    op.create_table('user_post',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('comp_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('telegram_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('images', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('accepted', 'unaccepted', 'disactive', 'deleted', name='userpoststatus'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_post_pkey')
    )
    op.create_table('showrooms',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('image_uz', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('image_ru', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('info_uz', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name_uz', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('info_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('location_link', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('active', 'inactive', name='showroomstatus'), autoincrement=False, nullable=True),
    sa.Column('type', postgresql.ENUM('showroom', 'dealer', name='showroomtype'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='showrooms_pkey')
    )
    op.create_table('competitions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('code', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('image_uz', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('image_ru', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('conditions_uz', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('conditions_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gifts_uz', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gifts_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gifts_image_uz', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gifts_image_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('active', 'stopped', 'deleted', name='competitionstatus'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='competitions_pkey')
    )
    op.drop_table('courses')
    # ### end Alembic commands ###
